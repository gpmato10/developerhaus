#테스트클래스의 위치를 결정한다.

= Introduction =

단위 테스트 케이스를 소스 구조 안에서 어디에 놓을건지 결정한다.

= Details =

 * 컨셉 : 구현소스와 테스트소스의 폴더는 다르게, 패키지는 동일, 컴파일된 클래스는 각각 다른곳으로

=== 토비3 기준 소스코드 위치 ===

http://developerhaus.googlecode.com/files/%EC%9C%84%EC%B9%98%EC%A1%B0%EC%A0%95%EC%A0%84%ED%81%B4%EB%9E%98%EC%8A%A4.jpg

 문제점 : 구현소스와 테스트코드가 같은 폴더내에 위치하여 구분이 어렵고, 배포시에 테스트 클래스만 발췌해야 하는 불편함이 있다.


=== 최종 구조 ====

 * 패키지 구조 *
http://developerhaus.googlecode.com/files/%EC%B5%9C%EC%A2%85%ED%8C%A8%ED%82%A4%EC%A7%80%EA%B5%AC%EC%A1%B0.jpg


 * 네비게이터 구조 *
http://developerhaus.googlecode.com/files/%EC%B5%9C%EC%A2%85%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%A1%B0.jpg

=== 환경 구성 방법 ===

  # 대상 프로젝트의 Properties 중 Java Build Path항목을 선택한 다음 Source탭을 선택한 후 Add Folder... 버튼을 클릭한다.

http://developerhaus.googlecode.com/files/testCodeLocation_1.jpg

  # 프로젝트의 이름을 선택하고 Create New Foler를 누른다.

http://developerhaus.googlecode.com/files/testCodeLocation_2.jpg

  # 테스트 클래스들이 위치할 폴더 이름(test)을 정한 후 OK를 선택한다.

http://developerhaus.googlecode.com/files/testCodeLocation_3.jpg

  # 각각 다른 곳으로 컴파일된 파일이 위치할 수 있도록, 'Allow output folders for source folders(소스 폴더들에 대해 출력 폴더를 지정할 수 잇도록 허용)을 선택한다. 선택하면 이전에 보이지 않앗던 Output 폴더를 지정할 수 있는 항목이 나타난다. src 폴더의 output 폴더가 Default로 되어 있는것이 보인다. 선택한 다음 Edit 버튼을 눌러서 변경한다.

http://developerhaus.googlecode.com/files/testCodeLocation_4.jpg

  # 아래 'Specific output folder' 라디오 버튼을 선택한 다음 Browse 버튼을 누른다.

http://developerhaus.googlecode.com/files/testCodeLocation_5.jpg

  # 기존의 기본 output폴더인 bin을 선택하고 'Create New Foler'을 눌러서 bin 하위에 main과 test폴더를 각각 만들자.

http://developerhaus.googlecode.com/files/testCodeLocation_5_1.jpg